"""create oauth2 tables

Revision ID: 6c378773eb47
Revises: b74ca08cfd9a
Create Date: 2017-11-12 21:46:28.127535

"""
from alembic import op
import sqlalchemy as sa
import commandment.dbtypes

from alembic import context

# revision identifiers, used by Alembic.
revision = '6c378773eb47'
down_revision = 'b74ca08cfd9a'
branch_labels = None
depends_on = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data', None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_clients',
                    sa.Column('app_name', sa.String(length=40), nullable=True),
                    sa.Column('client_id', sa.String(length=40), nullable=False),
                    sa.Column('client_secret', sa.String(length=55), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('is_confidential', sa.Boolean(), nullable=True),
                    sa.Column('_default_scopes', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('client_id')
                    )
    op.create_index(op.f('ix_oauth_clients_client_secret'), 'oauth_clients', ['client_secret'], unique=True)

    op.create_table('oauth_grants',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('client_id', sa.String(length=40), nullable=False),
                    sa.Column('code', sa.String(length=255), nullable=False),
                    sa.Column('redirect_uri', sa.String(length=255), nullable=True),
                    sa.Column('expires', sa.DateTime(), nullable=True),
                    sa.Column('_scopes', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(['client_id'], ['oauth_clients.client_id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_oauth_grants_code'), 'oauth_grants', ['code'], unique=False)
    op.create_table('oauth_tokens',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('client_id', sa.String(length=40), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('token_type', sa.String(length=40), nullable=True),
                    sa.Column('access_token', sa.String(length=255), nullable=True),
                    sa.Column('refresh_token', sa.String(length=255), nullable=True),
                    sa.Column('expires', sa.DateTime(), nullable=True),
                    sa.Column('_scopes', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(['client_id'], ['oauth_clients.client_id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('access_token'),
                    sa.UniqueConstraint('refresh_token')
                    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('oauth_tokens')
    op.drop_index(op.f('ix_oauth_grants_code'), table_name='oauth_grants')
    op.drop_table('oauth_grants')
    op.drop_index(op.f('ix_oauth_clients_client_secret'), table_name='oauth_clients')
    op.drop_table('oauth_clients')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
